apiVersion: v1
kind: Service
metadata:
  name: admin-svc-np
spec:
  type: NodePort
  selector:
    tier: backend-admin
  ports:
    - port: 8000
      targetPort: 8000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: admin-v1
  labels:
    app: msa
    tier: backend-admin
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: msa
      tier: backend-admin
      version: v1
  template:
    metadata:
      labels:
        app: msa
        tier: backend-admin
        version: v1
    spec:
      containers:
        - name: admin
          image: ddung1203/admin:10
          command: ["python", "manage.py", "runserver", "0.0.0.0:8000"]
          ports:
            - containerPort: 8000
          livenessProbe:
            httpGet:
              path: /api/products
              port: 8000
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /api/products
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 2
            timeoutSeconds: 1
      # initContainers:
      #   - name: migration
      #     image: ddung1203/admin:10
      #     command: ["python", "manage.py", "migrate"]
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: admin-v2
  labels:
    app: msa
    tier: backend-admin
    version: v2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: msa
      tier: backend-admin
      version: v2
  template:
    metadata:
      labels:
        app: msa
        tier: backend-admin
        version: v2
    spec:
      containers:
        - name: admin
          image: ddung1203/admin:10
          command: ["python", "manage.py", "runserver", "0.0.0.0:8000"]
          ports:
            - containerPort: 8000
          livenessProbe:
            httpGet:
              path: /api/products
              port: 8000
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /api/products
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 2
            timeoutSeconds: 1
      # initContainers:
      #   - name: migration
      #     image: ddung1203/admin:10
      #     command: ["python", "manage.py", "migrate"]
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: admin-v3
  labels:
    app: msa
    tier: backend-admin
    version: v3
spec:
  replicas: 1
  selector:
    matchLabels:
      app: msa
      tier: backend-admin
      version: v3
  template:
    metadata:
      labels:
        app: msa
        tier: backend-admin
        version: v3
    spec:
      containers:
        - name: admin
          image: ddung1203/admin:10
          command: ["python", "manage.py", "runserver", "0.0.0.0:8000"]
          ports:
            - containerPort: 8000
          livenessProbe:
            httpGet:
              path: /api/products
              port: 8000
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /api/products
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 2
            timeoutSeconds: 1
      # initContainers:
      #   - name: migration
      #     image: ddung1203/admin:10
      #     command: ["python", "manage.py", "migrate"]